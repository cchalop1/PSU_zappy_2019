# ZAPPY DOCUMENTATION EN
### 1/ ABOUT
Zappy is a network game where clients play on a server as Trantorians and must rise throught the Trantorians hierarchy by elevating to higher levels.
### 2/ GAME RULES
Clients are separated into teams.
Clients play on a 2D square map called Trantor.

On each tiles can randomly appear resources:
- food, needed for Trantorians to live.
- minerals, needed for elevation rituals.

Trantorians can achieve a range of actions:
- Moving
- Eating
- Collecting minerals
- Seeing
- Hearing
- Checking their inventory
- Laying eggs
- Ejecting other Trantorians

See "4/ COMMANDS" for furter information.

To get to the next level, Trantorians must "elevate", which requirements can be found below:
level|players|linemate|deraumere|sibur|mendiane|phiras|thystame
-|-|-|-|-|-|-|-
2|1|1|0|0|0|0|0
3|2|1|1|1|0|0|0
4|2|2|0|1|0|2|0
5|4|1|1|2|0|1|0
6|4|1|2|1|3|0|0
7|6|1|2|3|0|1|0
8|6|2|2|2|2|2|1
### 3/ TECHNICAL INFORMATIONS
##### a) PROJECT
The server is coded in C.
The client is coded in Python.
They commmunicate using TCP sockets.
The graphical interface is coded in SFML and C++.
The project is compiled with a Makefile (under Linux).
It produces 2 binaries: zappy_server & zappy_client

**server usage:**
>./zappy_server -p port -x width -y height -n name1 name2 ... -c clientsNb -f freq

**arguments:**
- port is the port number
- width is the width of the world
- height is the height of the world
- nameX is the name of the team X
- clientsNb is the number of authorized clients per team
- freq is the reciprocal of time unit for execution of actions

**client usage:**
>./zappy_client -p port -n name -h machine

**arguments:**
- port is the port number
- name is the name of the team
- machine is the name of the machine; localhost by default
##### b) GAME
The server runs on a single thread.
Once the clients are executed, they run automatically.
Several Trantorians can stand on the same tile.
Trantorians can look in a cone in front of them.
### 4/ COMMANDS:
A Command is a character string followed by a new line.

**commands list:**
|server|client|details
|-|-|-|
msz X Y\n|msz\n|map size
bct X Y q0 q1 q2 q3 q4 q5 q6\n|bct X Y\n|content of a tile
mct X Y q0 q1 q2 q3 q4 q5 q6\n * nbr_tiles|mct\n|content of the map (all the tiles)
tna N\n * nbr_teamstna\n|name of all the teams
ppo n X Y O\nppo #n\n|player’s position
plv n L\nplv #n\n|player’s level
pin n X Y q0 q1 q2 q3 q4 q5 q6\npin #n\n|player’s inventory
sgt T\nsgt\n|time unit request
sst T\nsst T\n|time unit modification
pnw #n X Y O\n||connection of a new player
pex n\n||expulsion
pbc n M\n||broadcast
pic X Y L n n ...\n||start of a ritual (by the first player)
pie X Y R\n||end of a ritual
pfk n\n||egg laying by the player
pdr n i\n||resource dropping
pgt n i\n||resource collectin
gpdi n\n||death of a player
enw e n X Y\n||an egg was laid by a player
eht e\n||egg hatching
ebo e\n||player connection for an egg
edi e\n||death of an hatched egg
seg N\n||end of game
smg M\n||message from the server
suc\n||unknown command
sbp\n||command parameter

**symbols meaning:**
- X  width or horizontal position
- Y  height or vertical position
- q0 food quantity
- q1 linemate quantity
- q2 deraumere quantity
- q3 sibur quantity
- q4 mendiane quantity
- q5 phiras quantity
- q6 thystame quantity
- n  player number
- O  orientation: 1=N 2=E 3=S 4=W
- L  player or incantation level
- e  egg number
- T  time unit
- N  name of the team
- R  incantation result
- M  message
- i  resource number
### 5/ DEVELOPERS
- Valentin De Saint Jacob
- Adrien Mollat
- Baptiste Aires
- Clément Chalopin
- Julian Riot
- Lucas Guyader
